* INACTIVE Better / different BVHs                                 :optional:
  Also implement at least a BVH that is slower to construct, but of
  better quality for use with static scenes.
* TODO Document how we follow & deviate from tutorials

* TODO More physically based model
** BRDF, PDF, & Importance sampling
   I.e. physically accurate sampling distributions.

* NEXT Improve metal material
  Consider complex fresnel coefficients.
* NEXT LIDAR

* NEXT Generalize

* NEXT Quasi-Monte Carlo (Sobol)
  Try using quasi-Monte Carlo integration instead of what we currently
  do, as it is more efficient (converges more quickly on
  average). Instead of pseudo-random numbers, uses a low-discrepancy
  sequence of quasi-random numbers, like the Sobol sequence. [[https://github.com/diku-dk/sobol][Futhark
  has a Sobol library]].
* INACTIVE Volumes (mist etc) :optional:
  Could be interesting to model how visible light and infrared light
  scatters differently, so lidar can perform better in certain weather
  conditions like mist.
* INACTIVE Particles/billboards (snow etc) :optional:

* INACTIVE Rewrite host-code in Rust :optional:

* INACTIVE Futhark lexer for LaTeX syntax highlighting :optional:
* INACTIVE Investigate problems related to float errors
  E.g. "catastrophic cancellation". See PBR Book 3.9.
* INACTIVE Textures :optional:
* INACTIVE Normal- / bump maps :optional:
* NEXT Lens distortion
  Compare using post-processing distortion maps with somehow
  implementing the lens parameters in the ray tracer. Simplified test
  to justify us not implementing a complex lens system (the hypothesis
  is that distortion maps will do just fine).

  Use some simple model, something like OpenCVs radial distortion:
  https://docs.opencv.org/2.4/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html
* INACTIVE Ensure conservation of energy
  Make sure that the material models we use are all compatible and
  that conservation of energy holds. Maybe somewhat optional, as we're
  implementing a somewhat simplified system, but should still very
  much be considered.
